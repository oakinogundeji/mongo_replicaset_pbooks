---
    - name: download existing database files
      when: s3_list_res.s3_keys[0]
      aws_s3:
          bucket: "{{BACKUP_BUCKET}}"
          object: "{{ s3_list_res.s3_keys[0] }}"
          dest: /home/ubuntu/s3_obj.tar.gz
          mode: get
      register: s3_download_res

    - debug: var=s3_download_res

    - name: extract s3 tarball to /home/ubuntu
      when: s3_download_res|success
      shell: cd /home/ubuntu && tar xvzf /home/ubuntu/s3_obj.tar.gz
      register: untarred_res

    - debug: var=untarred_res

    - name: copy contents of untarred dir to /data
      when: untarred_res|success
      shell: cp -r /home/ubuntu/data_backup/. /data
      register: data_copied

    - debug: var=data_copied

    - name: reset ownership of all data in /data
      when: data_copied|success
      shell: chown -R mongodb:mongodb /data
      register: ownership_rest_res

    - debug: var=ownership_rest_res

    - name: delete mongod.lock files
      when: ownership_rest_res|success
      file:
          path: "{{ item }}"
          state: absent
      with_items:
          - /home/ubuntu/data_backup/mongod.lock
          - /data/mongod.lock
      register: del_lock_res

    - debug: var=del_lock_res

    - name: delete untarred dir
      when: del_lock_res|success
      file:
          path: /home/ubuntu/data_backup
          state: absent
      register: deleted_untar_res

    - debug: var=deleted_untar_res
